@if (!string.IsNullOrEmpty(id))
{
    @if (tipo == "Docente")
    {
        <NavLink class="nav-link" href="/CadastroAviso">Avisos</NavLink>
    }
    <div class="row">
        <div class="col-6">
            <div class="row">
                <div class="col-12">
                    <span>@name</span>
                </div>
                <div class="col-12">
                    <span>@tipo</span>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="row">
                <div class="col-12 text-center">
                    <button onclick="@BtnSair_Clicked" class=" btn btn-danger px-4">Sair</button>
                </div>
                <div class="col-12 text-center">
                    <p>
                        @tempo
                    </p>
                </div>
            </div>
        </div>


    </div>
}

@code {
    [Inject] IJSRuntime Runtime { get; set; }
    [Inject] NavigationManager Navigation { get; set; }

    private int tempoDecorrido = 0;
    private Timer timer;

    public string id, name, tipo, tempo;

    protected override void OnInitialized()
    {
        timer = new Timer(AtualizarTempo, null, 1000, 1000);
    }

    private void AtualizarTempo(object state)
    {
        tempoDecorrido++;
        TimeSpan timeSpan = TimeSpan.FromSeconds(tempoDecorrido);
        tempo = $"{timeSpan.Hours:D2}:{timeSpan.Minutes:D2}:{timeSpan.Seconds:D2}";
        InvokeAsync(StateHasChanged);
    }



    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        id = await Runtime.InvokeAsync<string>("sessionStorage.getItem", "ID");
        if (!string.IsNullOrEmpty(id))
        {
            name = await Runtime.InvokeAsync<string>("sessionStorage.getItem", "Name");
            tipo = await Runtime.InvokeAsync<string>("sessionStorage.getItem", "Tipo");
            StateHasChanged();
        }
    }

    private async void BtnSair_Clicked()
    {
        await Runtime.InvokeVoidAsync("sessionStorage.removeItem", "ID");
        await Runtime.InvokeVoidAsync("sessionStorage.removeItem", "Name");
        await Runtime.InvokeVoidAsync("sessionStorage.removeItem", "Tipo");
        Navigation.NavigateTo("/");
    }
}
